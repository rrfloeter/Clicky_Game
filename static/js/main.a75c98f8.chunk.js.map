{"version":3,"sources":["components/CryptoCard/CryptoCard.js","components/Nav/Nav.js","components/Wrapper/index.js","components/Title/index.js","Container.js","Row.js","Column.js","App.js","index.js"],"names":["CryptoCard","props","react_default","a","createElement","className","value","id","onClick","Click","alt","name","src","image","Nav","href","title","rightWrong","score","topScore","Wrapper","children","Title","Container","concat","fluid","Row","Column","size","split","map","join","App","state","CryptoPics","currentScore","TopScore","RorW","clicked","_this","indexOf","Increment","setState","Reset","newScore","Shuffle","shuffledPics","array","i","length","x","Math","floor","random","_ref","shufflePics","_this2","this","components_Wrapper","components_Nav_Nav","components_Title","src_Container","src_Row","CryptoPic","src_Column","components_CryptoCard_CryptoCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"ykDAeiBA,SAZE,SAAAC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVC,MAAOL,EAAMM,GACbC,QAAS,kBAAMP,EAAMQ,MAAMR,EAAMM,MAEjCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,YCS1BC,SAhBH,SAAAb,GAAK,OACbC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BACVH,EAAAC,EAAAC,cAAA,KAAGW,KAAK,iBAAiBd,EAAMe,QAGnCd,EAAAC,EAAAC,cAAA,MAAIG,GAAG,MAAMN,EAAMgB,YAEnBf,EAAAC,EAAAC,cAAA,MAAIG,GAAG,WAAP,kBAAiCN,EAAMiB,OAEvChB,EAAAC,EAAAC,cAAA,MAAIG,GAAG,WAAP,cAA6BN,EAAMkB,oBCPhCC,MAJf,SAAiBnB,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMoB,iBCG1BC,MAJf,SAAerB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMoB,WCIvBE,SALG,SAAAtB,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAmB,OAAcvB,EAAMwB,MAAQ,SAAW,KAClDxB,EAAMoB,YCGIK,EALH,SAAAzB,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAmB,OAAQvB,EAAMwB,MAAQ,SAAW,KAC5CxB,EAAMoB,WCMIM,EATA,SAAA1B,GACb,IAAM2B,EAAO3B,EAAM2B,KAAKC,MAAM,KAAKC,IAAI,SAAAF,GAAI,MAAI,OAASA,IAAMG,KAAK,KACnE,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAWuB,GACb3B,EAAMoB,sBCiGEW,6MAnFbC,MAAQ,CACNC,aACAC,aAAc,EACdC,SAAU,EACVC,KAAM,GACNC,QAAS,MAGX7B,MAAQ,SAAAF,IACkC,IAApCgC,EAAKN,MAAMK,QAAQE,QAAQjC,IAC7BgC,EAAKE,YACLF,EAAKG,SAAS,CAAEJ,QAASC,EAAKN,MAAMK,QAAQd,OAAOjB,MAEnDgC,EAAKI,WAITF,UAAY,WACV,IAAMG,EAAWL,EAAKN,MAAME,aAAe,EAC3CI,EAAKG,SAAS,CACZP,aAAcS,EACdP,KAAM,KAEJO,GAAYL,EAAKN,MAAMG,SACzBG,EAAKG,SAAS,CAAEN,SAAUQ,IAEN,KAAbA,GACPL,EAAKG,SAAS,CAAEL,KAAM,aAExBE,EAAKM,aAGPF,MAAQ,WACNJ,EAAKG,SAAS,CACZP,aAAc,EACdC,SAAUG,EAAKN,MAAMG,SACrBC,KAAM,QACNC,QAAS,KAEXC,EAAKM,aAGPA,QAAU,WACR,IAAIC,EArDR,SAAqBC,GACnB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EAgDcQ,CAAYrB,GAC/BK,EAAKG,SAAS,CAAER,WAAYY,6EAGrB,IAAAU,EAAAC,KACP,OACEvD,EAAAC,EAAAC,cAACsD,EAAD,KACExD,EAAAC,EAAAC,cAACuD,EAAD,CACE3C,MAAM,qBACNE,MAAOuC,KAAKxB,MAAME,aAClBC,SAAUqB,KAAKxB,MAAMG,SACrBC,KAAMoB,KAAKxB,MAAMI,OAGnBnC,EAAAC,EAAAC,cAACwD,EAAD,+EAIA1D,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC0D,EAAD,KACGL,KAAKxB,MAAMC,WAAWJ,IAAI,SAAAiC,GAAS,OAClC7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAQpC,KAAK,aACX1B,EAAAC,EAAAC,cAAC6D,EAAD,CACEC,IAAKH,EAAUxD,GACfE,MAAO+C,EAAK/C,MACZgC,UAAWe,EAAKf,UAChBE,MAAOa,EAAKb,MACZE,QAASW,EAAKX,QACdtC,GAAIwD,EAAUxD,GACdM,MAAOkD,EAAUlD,qBA1EjBsD,mBCblBC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a75c98f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst CryptoCard = props => (\r\n    <div \r\n      className=\"card\" \r\n      value={props.id} \r\n      onClick={() => props.Click(props.id)}\r\n    >\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  export default CryptoCard;","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = props => (\r\n    <nav>\r\n        <ul>\r\n            <li className=\"brand animated lightSpeedIn\">\r\n                <a href=\"/clicky-game/\">{props.title}</a>\r\n            </li>\r\n\r\n            <li id=\"rw\">{props.rightWrong}</li>\r\n\r\n            <li id=\"cur-sco\">Current Score: {props.score}</li>\r\n\r\n            <li id=\"top-sco\">Top Score: {props.topScore}</li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Nav;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport CSS from \"./container.css\"\r\n\r\nconst Container = props =>\r\n  <div className={`Container${props.fluid ? \"-fluid\" : \"\"}`}>\r\n    {props.children}\r\n  </div>;\r\n\r\nexport default Container;","    \r\nimport React from \"react\";\r\n\r\nconst Row = props =>\r\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>\r\n    {props.children}\r\n  </div>;\r\n\r\nexport default Row;","import React from \"react\";\r\n\r\nconst Column = props => {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n  return (\r\n    <div className={size}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;","import React, { Component } from \"react\";\nimport CryptoCard from \"./components/CryptoCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport CryptoPics from \"./crypto.json\";\n\nfunction shufflePics(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let x = Math.floor(Math.random() * (i + 1));\n    [array[i], array[x]] = [array[x], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    CryptoPics,\n    currentScore: 0,\n    TopScore: 0,\n    RorW: \"\",\n    clicked: []\n  };\n\n  Click = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.Increment();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.Reset();\n    }\n  };\n\n  Increment = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      RorW: \"\"\n    });\n    if (newScore >= this.state.TopScore) {\n      this.setState({ TopScore: newScore });\n    }\n    else if (newScore === 12) {\n      this.setState({ RorW: \"You win!\" });\n    }\n    this.Shuffle();\n  };\n\n  Reset = () => {\n    this.setState({\n      currentScore: 0,\n      TopScore: this.state.TopScore,\n      RorW: \"Hello\",\n      clicked: []\n    });\n    this.Shuffle();\n  }\n\n  Shuffle = () => {\n    let shuffledPics = shufflePics(CryptoPics);\n    this.setState({ CryptoPics: shuffledPics });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          title=\"Crypto Clicky Game\"\n          score={this.state.currentScore}\n          TopScore={this.state.TopScore}\n          RorW={this.state.RorW}\n        />\n\n        <Title>\n          Click on a Crpyo but Remember that if you click one twice.... no Dice!\n          </Title>\n\n        <Container>\n          <Row>\n            {this.state.CryptoPics.map(CryptoPic => (\n              <Column size=\"md-3 sm-6\">\n                <CryptoCard\n                  key={CryptoPic.id}\n                  Click={this.Click}\n                  Increment={this.Increment}\n                  Reset={this.Reset}\n                  Shuffle={this.Shuffle}\n                  id={CryptoPic.id}\n                  image={CryptoPic.image}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}